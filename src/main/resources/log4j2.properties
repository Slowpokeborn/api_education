#status =  WARN
#name = PropertiesConfig

filter.threshold.type = ThresholdFilter
filter.threshold.level = debug

# Property
property.BASE_PATH = target/log/
property.LOG_FILE_NAME = log4j-application
property.LOG_PATTERN = %d{yyyy-MM-dd HH:mm:ss,SSS} [%t] %-5p %c{1}:%L - %m%n

# ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.target = SYSTEM_OUT
appender.console.follow = true
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${LOG_PATTERN}
appender.console.layout.charset = UTF-8
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = info

# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName= ${BASE_PATH}${LOG_FILE_NAME}.log
appender.rolling.filePattern= ${BASE_PATH}${LOG_FILE_NAME}_%d{yyyyMMdd_HHmmss}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = ${LOG_PATTERN}
appender.rolling.layout.charset = UTF-8
# Rotate Policies
appender.rolling.policies.type = Policies
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 30MB
#appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
#appender.rolling.policies.time.interval = 1
#appender.rolling.policies.time.modulate = true
#appender.rolling.strategy.type = DefaultRolloverStrategy
#appender.rolling.strategy.delete.type = Delete
#appender.rolling.strategy.delete.basePath = ${BASE_PATH}
#appender.rolling.strategy.delete.maxDepth = 1
#appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
#appender.rolling.strategy.delete.ifLastModified.age = 7d

# Mention package name here in place of example. Classes in this package or subpackages will use ConsoleAppender and RollingFileAppender for logging
logger.rolling.name = com.example
logger.rolling.level = debug
logger.rolling.additivity = false
logger.rolling.appenderRef.rolling.ref = fileLogger
logger.rolling.appenderRef.console.ref = consoleLogger

# Configure root logger for logging error logs in classes which are in package other than above specified package
#rootLogger.level = debug
#rootLogger.additivity = false
#rootLogger.appenderRef.rolling.ref = fileLogger
#rootLogger.appenderRef.console.ref = consoleLogger